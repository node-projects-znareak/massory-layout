(()=>{"use strict";function t(t,e){return function(t,e){for(const[s,i]of Object.entries(e))t[s]=i;return t}(document.createElement(t),e)}function e(t){return t.hasOwnProperty("src")?t.src:t}function s(t=640,e="max-width"){return window.matchMedia(`(${e}: ${t})`)}s(),s(990),s(1200),window.Massory=class{constructor({columns:t=2,container:e=document.body,center:s=!1,width:i="100%",maxWidth:n="100%",height:o="auto",lazyLoad:r=!1,breakPoints:a={},margin:d}={}){this.columns=t,this.container=e,this.center=s,this.width=i,this.height=o,this.maxWidth=n,this.lazyLoad=r,this.margin=d,this.breakPoints=Object.entries(a),this.breakPoints.length&&window.addEventListener("resize",(()=>{console.log(this.breakPoints)}))}show(s,i=this.container){if(s.length>0){const n=t("div",{className:"ms"}),o=s.length,r=function(e){const s={};for(let i=0;i<e;i++)s[i]=t("div",{className:"ms-column"});return s}(this.columns);let a=0;n.style.width=this.width,n.style.maxWidth=this.maxWidth,n.style.height=this.height,n.setAttribute("data-columns",this.columns),this.columns>=4&&n.classList.add("ms-fluid"),this.center&&(n.style.marginLeft="auto",n.style.marginRight="auto");for(let i=0;i<o;i++){const n=t("div",{className:"ms-item"}),o=t("img",{src:this.lazyLoad?s[i].lazy:e(s[i])});this.lazyLoad&&(o.setAttribute("data-loaded",e(s[i])),o.onload=()=>{return t=o,void("IntersectionObserver"in window?new IntersectionObserver((function(t,e){const s=t[0].target;t[0].isIntersecting&&s.src!==s.getAttribute("data-loaded")&&(s.src=s.getAttribute("data-loaded"),s.addEventListener("load",(t=>{s.classList.add("loaded"),e.unobserve(t.target)})))})).observe(t):console.error("IntersectionObserver no implemented this browser"));var t}),this.margin&&(n.style.margin=this.margin),n.appendChild(o),a==this.columns&&(a=0),r[a].appendChild(n),a++}for(const t of Object.values(r))n.appendChild(t);i?i.appendChild(n):this.container.appendChild(n),console.log("%c[Masonry Layout] Nodes added to the DOM âœ“","color: #54e346;")}}}})();